name: Sync Study Logs to Wiki (with FE/BE sections)

on:
  push:
    branches: [ "**" ]
    paths:
      - "Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/**"
  pull_request:
    branches: [ "**" ]
    paths:
      - "Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/**"

permissions:
  contents: write
  pull-requests: read

jobs:
  sync-wiki:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed study logs
        id: diff
        shell: bash
        run: |
          set -e
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          if [ -z "$BEFORE" ] || [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
            # Ï¥àÍ∏∞ Ïª§Î∞ã/Ìè¨ÌÅ¨ Îì±: Ï†ÑÏ≤¥ Ïä§Ï∫î
            git ls-files -z 'Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/**/*.md' > changed.zlist || true
          else
            git diff --name-only -z "$BEFORE" "$AFTER" -- 'Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/**/*.md' > changed.zlist || true
          fi

          # ÏÇ¨ÎûåÏù¥ Î≥¥Í∏∞ Ï¢ãÍ≤å Î°úÍ∑∏ÎèÑ ÎÇ®ÍπÄ
          tr '\0' '\n' < changed.zlist | tee changed.txt

          echo "changed<<EOF" >> $GITHUB_OUTPUT
          cat changed.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Install helpers
        run: |
          sudo apt-get update
          sudo apt-get install -y jq moreutils

      - name: Collect metadata
        id: meta
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${{ github.ref_name }}"
          REPO="${{ github.repository }}"
          SHA="${{ github.sha }}"
          SHORT=$(git rev-parse --short "$SHA")
          COMMIT_URL="https://github.com/${REPO}/commit/${SHA}"

          # PR URL (ÏûàÏùÑ ÎïåÎßå)
          PR_URL=""
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_URL="${{ github.event.pull_request.html_url }}"
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "short=$SHORT" >> $GITHUB_OUTPUT
          echo "commit_url=$COMMIT_URL" >> $GITHUB_OUTPUT
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT

      - name: Clone Wiki (.wiki.git)
        shell: bash
        run: |
          set -e
          WIKI_URL="https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          git clone "$WIKI_URL" _wiki || (mkdir -p _wiki && cd _wiki && git init && git remote add origin "$WIKI_URL")
          mkdir -p "_wiki/Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏"

      - name: Copy changed files & inject metadata
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          BRANCH="${{ steps.meta.outputs.branch }}"
          SHORT="${{ steps.meta.outputs.short }}"
          COMMIT_URL="${{ steps.meta.outputs.commit_url }}"
          PR_URL="${{ steps.meta.outputs.pr_url }}"

          # changed.zlistÎäî NUL Íµ¨Î∂ÑÏûê
          if [ ! -s changed.zlist ]; then
            echo "No changed studylog files detected."
          else
            # ÌååÏùºÎ≥ÑÎ°ú Î©îÌÉÄ ÏπòÌôòÌïòÏó¨ ÏúÑÌÇ§Ïóê Î∞òÏòÅ
            while IFS= read -r -d '' FILE; do
              [ -z "$FILE" ] && continue
              BASENAME="$(basename "$FILE")"
              DEST="_wiki/Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/$BASENAME"

              # ÏõêÎ¨∏ ÏùΩÏñ¥ÏÑú ÌîåÎ†àÏù¥Ïä§ÌôÄÎçî ÏπòÌôò
              CONTENT="$(cat "$FILE")"
              REL_PATH="$FILE"

              # ÌÜ†ÌÅ∞ ÏπòÌôò
              CONTENT="${CONTENT//\{\{BRANCH_NAME\}\}/$BRANCH}"
              CONTENT="${CONTENT//\{\{COMMIT_SHORT\}\}/$SHORT}"
              CONTENT="${CONTENT//\{\{COMMIT_URL\}\}/$COMMIT_URL}"
              CONTENT="${CONTENT//\{\{PR_URL\}\}/$PR_URL}"
              CONTENT="${CONTENT//\{\{REL_PATH\}\}/$REL_PATH}"

              printf "%s" "$CONTENT" > "$DEST"
              echo "Synced: $DEST"
            done < changed.zlist
          fi

      - name: Rebuild Wiki Home grouped by FE/BE/Misc
        shell: bash
        run: |
          set -euo pipefail

          INDEX="_wiki/Home.md"
          INDEX_FE="$(mktemp)"
          INDEX_BE="$(mktemp)"
          INDEX_MISC="$(mktemp)"

          # Asia/Seoul ÏãúÍ∞ÑÏúºÎ°ú ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ
          export TZ=Asia/Seoul
          NOW="$(date '+%Y-%m-%d %H:%M %Z')"

          # Î™©Î°ù ÏÉùÏÑ±: ÏúÑÌÇ§Ïùò Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏ ÎÇ¥ md ÌååÏùºÏùÑ Ïä§Ï∫î (ÌååÏùºÎ™Ö Í∏∞Ï§Ä ÎÇ¥Î¶ºÏ∞®Ïàú)
          mapfile -t FILES < <(find "_wiki/Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏" -maxdepth 1 -type f -name "*.md" -printf "%f\n" | sort -r)

          for F in "${FILES[@]}"; do
            TITLE="${F%.md}"

            # Î∂ÑÎ•ò: ÌååÏùºÎ™Ö Ï†ëÎëêÏÇ¨Î°ú ÌåêÏ†ï
            if [[ "$F" == \[FE\]* ]]; then
              echo "- [[Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/$TITLE]]" >> "$INDEX_FE"
            elif [[ "$F" == \[BE\]* ]]; then
              echo "- [[Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/$TITLE]]" >> "$INDEX_BE"
            else
              echo "- [[Ïä§ÌÑ∞ÎîîÎ°úÍ∑∏/$TITLE]]" >> "$INDEX_MISC"
            fi
          done

          {
            echo "# üìö Ïä§ÌÑ∞Îîî Î°úÍ∑∏ (ÏûêÎèô Ïù∏Îç±Ïä§)"
            echo
            echo "> ÏµúÏã† ÏóÖÎç∞Ïù¥Ìä∏: $NOW"
            echo

            if [ -s "$INDEX_FE" ]; then
              echo "## üñ•Ô∏è Frontend"
              cat "$INDEX_FE"
              echo
            fi

            if [ -s "$INDEX_BE" ]; then
              echo "## ‚öôÔ∏è Backend"
              cat "$INDEX_BE"
              echo
            fi

            if [ -s "$INDEX_MISC" ]; then
              echo "## üì¶ Í∏∞ÌÉÄ/Í≥µÌÜµ"
              cat "$INDEX_MISC"
              echo
            fi
          } > "$INDEX"

          echo "Home.md rebuilt."

      - name: Commit & push to Wiki
        shell: bash
        run: |
          set -e
          cd _wiki
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          if git diff --staged --quiet; then
            echo "No wiki changes to commit."
            exit 0
          fi

          MSG="docs(wiki): sync from ${GITHUB_REF_NAME} @ ${GITHUB_SHA:0:7}"
          git commit -m "$MSG"
          git push origin HEAD
